;; ----------------------------
;; |  PROJECT EULER exercise  |
;; ----------------------------

#|
2. Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
|#

(defun fib (n) 
    (defvar e1 2)
    (defvar e2 8)
    (defvar res 0)
    (defvar tmp 0)
    
    (loop 
        (setq res (+ res e1))
        (setq tmp e2)
        (setq e2 (+ (* e2 4) e1))
        (setq e1 tmp)
        
        (when (> e1 n) (return res))
    )
)

(write (fib 4000000))

#|
P.S. Although the code gives good result, it may contain some warnings/errors due
to my limited knowledge of Common Lisp. 
|#
